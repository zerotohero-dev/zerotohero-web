<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Zero to Hero - hashing</title>
    <link rel="self" type="application/atom+xml" href="https://zerotohero.dev/tags/hashing/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://zerotohero.dev"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-12-02T00:00:00+00:00</updated>
    <id>https://zerotohero.dev/tags/hashing/atom.xml</id>
    <entry xml:lang="en">
        <title>Computing File Hashes in Unix Systems: A Complete Guide</title>
        <published>2024-12-02T00:00:00+00:00</published>
        <updated>2024-12-02T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Volkan Özçelik
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://zerotohero.dev/inbox/file-hashing/"/>
        <id>https://zerotohero.dev/inbox/file-hashing/</id>
        
        <content type="html" xml:base="https://zerotohero.dev/inbox/file-hashing/">&lt;p&gt;File hashing is an essential operation in software development, system administration, and security verification. This guide will walk you through the process of computing file hashes in Unix-like systems, with a focus on generating formatted SHA-256 hashes.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;basic-hash-computation&quot;&gt;Basic Hash Computation&lt;&#x2F;h2&gt;
&lt;p&gt;The most straightforward way to compute a SHA-256 hash in Unix systems is using the &lt;code&gt;sha256sum&lt;&#x2F;code&gt; command:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;sha256sum filename
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This produces output in the format:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;hash_value filename
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;formatted-hash-output&quot;&gt;Formatted Hash Output&lt;&#x2F;h2&gt;
&lt;p&gt;Sometimes you need to format the hash output in a specific way, particularly when working with systems that expect a certain structure. Here’s how to generate a hash in this format:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;color:#fdf4c1aa;&quot;&gt;&lt;code&gt;&lt;span&gt;type:&amp;quot;unix&amp;quot;  
&lt;&#x2F;span&gt;&lt;span&gt;value:&amp;quot;sha256:HASH_VALUE&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;command-construction&quot;&gt;Command Construction&lt;&#x2F;h3&gt;
&lt;p&gt;To achieve this format, we can combine several Unix commands:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;type:\&amp;quot;unix\&amp;quot;  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;value:\&amp;quot;sha256:$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;sha256sum .&#x2F;keeper &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cut -d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39; &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; -f1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;)\&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Let’s break down this command:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sha256sum .&#x2F;keeper&lt;&#x2F;code&gt;: Computes the SHA-256 hash of the file&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;cut -d&#x27; &#x27; -f1&lt;&#x2F;code&gt;: Extracts just the hash value, removing the filename&lt;&#x2F;li&gt;
&lt;li&gt;Command substitution &lt;code&gt;$()&lt;&#x2F;code&gt;: Embeds the hash into our formatted string&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;echo&lt;&#x2F;code&gt;: Outputs the final formatted result&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;use-cases&quot;&gt;Use Cases&lt;&#x2F;h3&gt;
&lt;p&gt;This formatting is particularly useful for:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Configuration management systems&lt;&#x2F;li&gt;
&lt;li&gt;Version control systems&lt;&#x2F;li&gt;
&lt;li&gt;Security verification processes&lt;&#x2F;li&gt;
&lt;li&gt;Automated build systems&lt;&#x2F;li&gt;
&lt;li&gt;Documentation purposes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;alternative-hash-algorithms&quot;&gt;Alternative Hash Algorithms&lt;&#x2F;h2&gt;
&lt;p&gt;While SHA-256 is commonly used, Unix systems support various other hashing algorithms:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;MD5 (using &lt;code&gt;md5sum&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;SHA-1 (using &lt;code&gt;sha1sum&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;SHA-224 (using &lt;code&gt;sha224sum&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;SHA-384 (using &lt;code&gt;sha384sum&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;SHA-512 (using &lt;code&gt;sha512sum&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;best-practices&quot;&gt;Best Practices&lt;&#x2F;h2&gt;
&lt;p&gt;When working with file hashes:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Always verify the file path before computing the hash&lt;&#x2F;li&gt;
&lt;li&gt;Use appropriate hash algorithms for your security requirements&lt;&#x2F;li&gt;
&lt;li&gt;Consider using multiple hash algorithms for critical files&lt;&#x2F;li&gt;
&lt;li&gt;Document the hashing process in your system documentation&lt;&#x2F;li&gt;
&lt;li&gt;Implement verification steps in your deployment pipeline&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;error-handling&quot;&gt;Error Handling&lt;&#x2F;h2&gt;
&lt;p&gt;When implementing hash computation in scripts, consider handling these common issues:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;File not found&lt;&#x2F;li&gt;
&lt;li&gt;Insufficient permissions&lt;&#x2F;li&gt;
&lt;li&gt;Corrupted files&lt;&#x2F;li&gt;
&lt;li&gt;System command availability&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Example error handling in a shell script:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282828;color:#fdf4c1aa;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;#!&#x2F;bin&#x2F;bash
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;.&#x2F;keeper&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;! &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;-f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;then
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Error: File not found&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;! &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;-r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;then
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Error: Cannot read file (check permissions)&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;hash_output&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;sha256sum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;&#x2F;dev&#x2F;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$? -ne 0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;then
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Error: Hash computation failed&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;type:\&amp;quot;unix\&amp;quot;  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;value:\&amp;quot;sha256:$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;hash_output&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cut -d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39; &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; -f1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;)\&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;File hashing is a critical operation in many systems. By understanding how to compute and format hashes correctly, you can ensure your systems maintain security and integrity while meeting specific format requirements.&lt;&#x2F;p&gt;
&lt;p&gt;Remember to always validate your hash computations and keep your hashing tools updated to maintain security standards.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
